/* Shown when "Show club officers" entry is missing in Preferences */
"“Current members” includes “club officers”" = "“Current members” includes “club officers”";

/* Shown when "Show deceased members" entry is missing in Preferences */
"“Former members” includes “deceased members”" = "“Former members” includes “deceased members”";

/* <count> members (including all types of members) within photo club */
"%lld members (inc. ex-members)" = "%lld members (inc. ex-members)";

/* Header of section of Who's Who screen */
"%lld photographers" = "%lld photographers";

/* Administrative role of member within a club. Used as part of concatenations. */
"admin" = "admin";

/* Caption of Museums image on Readme page */
"Amsterdam has two photography museums." = "Amsterdam has two photography museums.";

/* To generate strings like "secretary and admin" */
"and" = "and";

/* Shown on Readme page. */
"App version %@ (build %@)" = "App version %@ (build %@)";

/* Name of the fruit, not the company. */
"Apple" = "Apple";

/* Birthday of member (without year). Date not currently localized? */
"Birthday:" = "Birthday:";

/* Administrative role of member within a club. Used as part of concatenations. */
"chairman" = "chairman";

/* Title of page with maps of clubs and museums */
"Clubs" = "Clubs";

/* Section title on Readme page */
"Concept" = "The concept";

/* Section footer text Portfolios screen */
"Data source: %@://%@%@/" = "Data source: %@://%@%@/";

/* Section footer text Portfolios screen */
"Data source: in-app member data." = "Data source: in-app member data.";

/* Relationship status of member within a club. Used as prefix. */
"deceased" = "deceased";

/* Section title on Readme page */
"Developers wanted" = "Developers wanted";

/* Caption of Websites image on Readme page */
"Example of a link to a club web site" = "Example of a link to a club web site";

/* Relationship status of member within a club. Used in concatenations. */
"external coach" = "external coach";

/* Section title on Readme page */
"Features and tips" = "Features and tips";

/* Relationship status of member within a club. Used as prefex. */
"former" = "former";

/* Caption for image on Readme page */
"Fragment of the Swift source code" = "Fragment of the Swift source code";

/* Used in DebugPanel. I couldn't avoid localization here. Just use original as translation */
"frameSize = [%@,%@]" = "frameSize = [%@,%@]";

/* Relationship status of member within a club. Used in concatenations. */
"honorary member" = "honorary member";

/* Shown instead of app name in PreludeView when app is started */
"In debug mode" = "In debug mode";

/* Statistics at end of section of FilteredMemberPortfoliosView
Default status of member within a club. Used in concatenations. */
"member" = "member";

/* In Preferences, above toggles like "Show former members" */
"Member categories" = "Member categories";

/* Statistics at end of section of FilteredMemberPortfoliosView */
"members" = "members";

/* Shown below map if there is no usable description in the OrganzationList.json file. */
"No description available." = "No description available.";

/* Hint to the user if the database returns zero PhotoClubs. */
"No photo clubs seem to be currently loaded.\nTry dragging down the Photo Clubs screen to reload the default clubs." = "No photo clubs seem to be currently loaded.\nTry dragging down the Photo Clubs screen to reload the default clubs.";

/* X of Y portfolio(s) shown (due to various forms of filtering) */
"of1" = "of";

/* <person> of <photo club> */
"of2" = "of";

/* Header of section of Who's Who screen */
"One photographer" = "One photographer";

/* Section title on Readme page. */
"Open Source" = "Developers";

/* First paragraph in The App section of Readme page */
"Paragraph_1.1" = "This app showcases selected photos by members of photo clubs. Former members can also be included.";

/* Second paragraph in The App section of Readme page */
"Paragraph_1.2" = "It does this in a _consistent_ way across all participating photographers and clubs. For the app's users, this consistency avoids having to find each club's website and discovering how to use it to locate and browse the images.";

/* Third paragraph in The App section of Readme page */
"Paragraph_1.3" = "The app does _not_ try to replace either club or photographer web sites. It also doesn't try to replace social media presence. The app's focus is to present the images in a consistent, easy to access way with minimal distractions. The app can help find extra information via links to club and photographer web sites.";

/* Fourth paragraph in The App section of Readme page */
"Paragraph_1.4" = "The app was originally named _Photo Club Waalre_ after a 15-person photo club in the Netherlands. The word __hub__ in the newer name stresses the app's support for _multiple_ photo clubs, and the app's ambition to strengthen the ties between clubs by making their work easier to access.";

/* Fifth paragraph in The App section of Readme page */
"Paragraph_1.5" = "Support for multiple photo clubs requires the ability to display a list of clubs, their members, and the selected photos per member.";

/* Sixth paragraph in The App section of Readme page */
"Paragraph_1.6" = "Supporting many clubs also implies that individual clubs should be able to maintain their own data. This means the ability to provide and maintain the images, but also the club's membership list. Central support should be limited to maintaining the app. The app's [GitHub site](https://GitHub.com/vdhamer/Photo-Club-Hub#readme) explains the strategy for allowing clubs to maintain their data without requiring any real software expertise.";

/* First paragraph in The Concept on Readme page */
"Paragraph_2.1" = "Photo clubs play a central role in this app. The Portfolios screen shows a list of photo clubs.";

/* Second paragraph in The Concept on Readme page */
"Paragraph_2.2" = "Each photo club, in turn, contains a series of member ***portfolios*** containing the actual images.";

/* Third paragraph in The Concept on Readme page */
"Paragraph_2.3" = "Each portfolio thus covers the subset of the photographer's work _that is associated with that photo club_. Some photographers may have multiple portfolios in the app if the photographer is (or was at some point) associated with more than one photo club.";

/* Fourth paragraph in The Concept on Readme page */
"Paragraph_2.4" = "Each portfolio is shown in chronological order, with the latest work shown first, and often spans multiple years. Just like painters, styles may change on that time scale.";

/* Fifth paragraph in The Concept on Readme page */
"Paragraph_2.5" = "We try to show the portfolios with **minimal distraction**. Web sites are often less optimal for this because they need to show browser controls (e.g., an address bar or tabs) and serve multiple purposes (e.g., show club news or contact information).";

/* Sixth paragraph in The Concept on Readme page */
"Paragraph_2.6" = "For Photo Club Waalre, for example, we chose to also include the work of former club members. By default, former members are not visible, but you can enable displaying them in the Preferences screen.";

/* Seventh paragraph in The Concept on Readme page */
"Paragraph_2.7" = "Contact us (e.g. via GitHub, Facebook or LinkedIn) if you are interested in adding support for your photo club.";

/* First paragraph in The Features section of Readme page */
"Paragraph_3.1" = "__Web sites__\nThe app does not try to replace club web sites: web sites have more uses than just presenting photos. Because we consider web sites and this app to be _complementary_, the app provides clickable links to club web sites as well as to photographer web sites.";

/* Second paragraph in The Features section of Readme page */
"Paragraph_3.2" = "__Languages__\nThe app currently supports English and Dutch. iOS automatically selects the app's language based on your device’s language settings (_Settings > General > Language & Region > Preferred Language Order_). iOS also allows you to overrule this choice per individual app (_Settings > Photo Club Hub > Language_).";

/* Third paragraph in The Features section of Readme page */
"Paragraph_3.3" = "__Deletion__\nOn the _Portfolio_ page, you can swipe to delete a member from the list. Don't worry - if the person is still a club member, that person will reappear the next time the app synchronises with online data. This swiping can be useful to remove members who are no longer on the online data members lists. In any case, swipe as much as you like (who knows, it just might be therapeutical).";

/* Fourth paragraph in The Features section of Readme page */
"Paragraph_3.4" = "__Museums__\nThe app also contains the names and locations of a few dozen photo museums. These show up on the maps on the Clubs screen if you zoom out enough.";

/* Fifth paragraph in The Features section of Readme page */
"Paragraph_3.5" = "__Roadmap__\nBy clicking on the above button you can (anonymously) vote for improvements you would like in future versions of this app. You can only vote once for any particular improvement.";

/* First paragraph in Prelude section of Readme page */
"Paragraph_4.1" = "When the app opens, it shows an image corresponding to the app’s icon. If you tap somewhere ***inside*** the image, it zooms out to show the full image representing how digital cameras see color.";

/* Second paragraph in Prelude section of Readme page */
"Paragraph_4.2" = "This involves a [Bayer color filter array](https://en.wikipedia.org/wiki/Bayer_filter) that adds a color filter on top of each sensor cell. This filter array is shown here superimposed on a colorful photo.";

/* Third paragraph in Prelude section of Readme page */
"Paragraph_4.3" = "Tapping ***inside*** the image allows you to zoom in or out to your heart's content. Tapping ***outside*** the image area ends the animation. A single tap ***outside*** the image allows you to skip the animation.";

/* First paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.1" = "The app runs on iPhone and iPad and requires iOS 17.0 or higher. As most iOS users upgrade to the most recent iOS version possible, this means that the latest app version can support devices made in the last 6 or so years.";

/* Second paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.2" = "The app depends heavily on various Apple software technologies. These include Swift (a programming language), SwiftUI (a user interface framework), Core Data (local data storage), Metal (graphics acceleration), and so-called _structured concurrency_ (for data fetching), Xcode (development tooling), and iOS itself.";

/* Third paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.3" = "The benefit of an iOS focus is that it allows the app's developers to focus on functionality rather than cross-platform compatibility.";

/* Fourth paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.4" = "The drawback, however, is the lack of Android support (for now). This is because the Android world has its own set of software technologies and tends to have more internal diversity. Apps that choose to support multiple platforms require more effort or require more technical compromises.";

/* Fifth paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.5" = "To put this into perspective, the top-6 software \"platforms\" are (largest first): web, Android, Windows, iOS, iPadOS, and MacOS. Only the very largest apps (like Word, Twitter, Minecraft, Chrome) cover the full range. Other famous apps cover only half: Photoshop (Windows, MacOS, iPadOS), WhatsApp (iPhone, Android, web - kind of), Pokémon Go (Android, iOS, iPadOS - kind of).";

/* Sixth paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.6" = "The roadmap for additional future platform support will depend on uptake and help from the software community. MacOS and VisionOS both more or less work already. Support for Apple's tvOS is possible. However, a promising future step would be to support the automatic generation of web site pages using the same data sources used by the app. This would indirectly cover Android, PC, and more. And would benefit the clubs that need to maintain their lists.";

/* First paragraph Developers section of Readme page */
"Paragraph_6.1" = "You can find this app on [GitHub](https://github.com/vdhamer/Photo-Club-Hub). This allows other software developers to contribute. Getting more developers involved will speed things up, but also provides fresh ideas and ultimately improve continuity.";

/* Second paragraph Developers section of Readme page */
"Paragraph_6.2" = "Welcome contributions include adding features, code improvements, ideas on architecture and interface definition, and possibly server-side functionality.";

/* Third paragraph Developers section of Readme page */
"Paragraph_6.3" = "Contributions that _do not require coding_ are also welcome: beta testing via [TestFlight](https://apps.apple.com/us/app/testflight/id899247664), feature requests, translations, and - above all - adding support for more clubs.";

/* Fourth paragraph Developers section of Readme page */
"Paragraph_6.4" = "There is a major ongoing transition to provide a clean, standardised interface to retrieve data per photo club. Such an interface is needed to load the data, but also to keep the data up to date. After all, membership data and portfolios change regularly. The original interface was a plug-in design with an adaptor per photo club. This is being replaced by a standard JSON-based interface to avoid having to update the source in order to onboard additional clubs.";

/* Fifth paragraph Developers section of Readme page */
"Paragraph_6.5" = "For Photo Club Waalre, an early prototype of this approach to loading data is already in use. The fact that the club exists is stored in a central (JSON) file. That file points to a membership list that is read from a HTML table on the club’s [website](https://www.FotogroepWaalre.nl). The portfolios are read from XML files generated by an Adobe Lightroom plug-in called [JuiceBox-Pro](https://www.juicebox.net/tour/). This plug-in allows the club to manage the portfolios per member using Lightroom (as a Lightroom \"collection\"). These collections can then be uploaded (ftp'ed) to the webserver via the Lightroom _Upload_ button. The uploaded information can then be downloaded from the web site when it is needed.";

/* Sixth paragraph Developers section of Readme page */
"Paragraph_6.6" = "Software developers or other volunteers who are interested to help can contact us via GitHub, Facebook PM or LinkedIn.";

/* First paragraph Model section of Readme page */
"Paragraph_7.1" = "As an intro for developers, here is an informal tour of the ***model***. The model is a [schema](https://en.wikipedia.org/wiki/Database_schema) or information model in the database sense, or “Model“ in the sense of the [Model-View-ViewModel](https://www.hackingwithswift.com/books/ios-swiftui/introducing-mvvm-into-your-swiftui-project) design pattern. The app uses a Swift-style MVVM design, meaning model data is stored in structs rather than in classes.";

/* Second paragraph Model section of Readme page */
"Paragraph_7.2" = "The model: every **PhotoClub** has **Members** of various types (current, former, etc.), while some Members have a formal role like chairman within the PhotoClub. Some of **Photographer**'s data (like name and birthday) are unrelated to being a Member of a PhotoClub. **Portfolios** represent the body of work of a Photographer in the context of a PhotoClub. A Portfolio contains **Images**, but an Image could be in multiple Portfolios depending on where the Image was shared. Member and Portfolio can technically be considered synonyms from a modeling perspective: we create exactly one Portfolio for each PhotoClub that a Photographer joined. They are thus a single table in the database.";

/* Caption for image on Readme page */
"Partial model" = "Partial model";

/* Telephone number (usually invisible) */
"Phone:" = "Phone:";

/* Name of the app shown in PreludeView when app is started */
"Photo Club Hub" = "Photo Club Hub";

/* Title of page with clubs and maps */
"Photo Clubs" = "Photo Clubs";

/* Shown in gray at the bottom of the Photo Club page (1/3). */
"PhotoClubs_Caption_1" = "① You can unlock/lock a map's scrolling and panning features using the Lock icon.";

/* Shown in gray at the bottom of the Photo Club page (2/3). */
"PhotoClubs_Caption_2" = "② An individiual photo club can be deleted by first deleting (swipe left) all linked Portfolios on the Portfolio page, and then deleting (swipe left) the photo club itself on this page.";

/* Title of page showing member portfolios */
"Portfolios" = "Portfolios";

/* Caption of an image on the Readme page */
"Poster for a photo club exposition\n" = "Poster for a photo club exposition\n";

/* Title of screen with toggles to adjust preferences */
"Preferences" = "Preferences";

/* Title of the opening animation screen */
"Prelude" = "Prelude";

/* Relationship status of member within a club. Used in concatenations. */
"prospective member" = "prospective member";

/* Title of Readme screen */
"Readme" = "Readme";

/* Field at top of Who's Who page that allows the user to filter the photographers based on either given- and family name.
Field at top of Members page that allows the user to filter the members based on either given- and family name. */
"Search names" = "Search names";

/* Administrative role of member within a club. Used as part of concatenations. */
"secretary" = "secretary";

/* Label of toggle in Preferences */
"Show aspiring members" = "Show aspiring members";

/* Label of toggle in Preferences */
"Show club officers" = "Show club officers";

/* Label of toggle in Preferences */
"Show current members" = "Show current members";

/* Label of toggle in Preferences */
"Show deceased members" = "Show deceased members";

/* Label of toggle in Preferences */
"Show external coaches" = "Show external coaches";

/* Label of toggle in Preferences */
"Show former members" = "Show former members";

/* Label of toggle in Preferences */
"Show honorary members" = "Show honorary members";

/* X member(s) shown (due to various forms of filtering) */
"shown" = "shown";

/* Section title on Readme page. */
"Supported Platforms" = "iOS, iPadOS";

/* Caption of Localizations image on Readme page */
"Supporting multiple languages" = "Supporting multiple languages";

/* Section title on Readme page */
"The app" = "The app";

/* Section title on Readme page */
"The concept" = "The concept";

/* Section title on Readme page */
"The Model" = "The Model";

/* Caption of an image on the Readme page */
"The Preferences screen." = "The Preferences screen.";

/* Section title on Readme page */
"The Prelude" = "The Prelude";

/* Shown in gray at the bottom of the Photographers page. */
"This page lists all the photographers that this app knows about. A photographer has one or more clickable image thumbnails below the photographer's name. Clicking on any thumbnail leads to the images associated with one particular photo club. The thumbnails can be scrolled horizontally (if there are many of them on one line)." = "This page lists all the photographers that this app knows about. A photographer has one or more clickable image thumbnails below the photographer's name. Clicking on any thumbnail leads to the images associated with one particular photo club. The thumbnails can be scrolled horizontally (if there are many of them on one line).";

/* Hint to the user if the database returns zero Members with Search filter in use. */
"To see names here, please adapt the Search filter or enable additional categories on the Preferences page." = "To see names here, please adapt the Search filter or enable additional categories on the Preferences page.";

/* Hint to the user if the database returns zero Members with empty Search filter. */
"To see names here, please enable additional categories on the Preferences page." = "To see names here, please enable additional categories on the Preferences page.";

/* Administrative role of member within a club. Used as part of concatenations. */
"treasurer" = "treasurer";

/* Administrative role of member within a club. Used as part of concatenations. */
"vice-chairman" = "vice-chairman";

/* Hint to the user if all of the Preference toggles are disabled. */
"Warning: all member categories on the Preferences page are disabled. Please enable one or more options in Preferences." = "Warning: all member categories on the Preferences page are disabled. Please enable one or more options in Preferences.";

/* Title of page with list of photographers */
"Who's Who" = "Who's Who";


/* Shown when "Show club officers" entry is missing in Preferences */
"“Current members” includes “club officers”" = "“Current members” includes “club officers”";

/* Shown when "Show deceased members" entry is missing in Preferences */
"“Former members” includes “deceased members”" = "“Former members” includes “deceased members”";

/* <count> members (including all types of members) within photo club */
"%lld members (inc. ex-members)" = "%lld members (inc. ex-members)";

/* Header of section of Who's Who screen */
"%lld photographers" = "%lld photographers";

/* Administrative role of member within a club. Used as part of concatenations. */
"admin" = "admin";

/* To generate strings like "secretary and admin" */
"and" = "and";

/* Shown on Readme page. */
"App version %@ (build %@)" = "App version %@ (build %@)";

/* Name of the fruit, not the company. */
"Apple" = "Apple";

/* Birthday of member (without year). Date not currently localized? */
"Birthday:" = "Birthday:";

/* Administrative role of member within a club. Used as part of concatenations. */
"chairman" = "chairman";

/* Section title on Readme page */
"Concept" = "The concept";

/* Section footer text Portfolios screen */
"Data source: %@://%@%@/" = "Data source: %@://%@%@/";

/* Section footer text Portfolios screen */
"Data source: in-app member data." = "Data source: in-app member data.";

/* Relationship status of member within a club. Used as prefix. */
"deceased" = "deceased";

/* Section title on Readme page */
"Developers wanted" = "Developers wanted";

/* Relationship status of member within a club. Used in concatenations. */
"external coach" = "external coach";

/* Section title on Readme page */
"Features and tips" = "Features and tips";

/* Relationship status of member within a club. Used as prefex. */
"former" = "former";

/* Caption for image on Readme page */
"Fragment of the Swift source code" = "Fragment of the Swift source code";

/* Used in DebugPanel. I couldn't avoid localization here. Just use original as translation */
"frameSize = [%@,%@]" = "frameSize = [%@,%@]";

/* Relationship status of member within a club. Used in concatenations. */
"honorary member" = "honorary member";

/* Shown instead of app name in PreludeView when app is started */
"In debug mode" = "In debug mode";

/* Caption of Localizations image on Readme page */
"List of supported languages" = "List of supported languages";

/* Statistics at end of section of FilteredMemberPortfoliosView
Default status of member within a club. Used in concatenations. */
"member" = "member";

/* In Preferences, above toggles like "Show former members" */
"Member categories" = "Member categories";

/* Statistics at end of section of FilteredMemberPortfoliosView */
"members" = "members";

/* Hint to the user if the database returns zero PhotoClubs. */
"No photo clubs seem to be currently loaded.\nTry dragging down the Photo Clubs screen to reload the default clubs." = "No photo clubs seem to be currently loaded.\nTry dragging down the Photo Clubs screen to reload the default clubs.";

/* X of Y portfolio(s) shown (due to various forms of filtering) */
"of1" = "of";

/* <person> of <photo club> */
"of2" = "of";

/* Header of section of Who's Who screen */
"One photographer" = "One photographer";

/* Section title on Readme page. */
"Open Source" = "Developers";

/* First paragraph in Waalre section of Readme page */
"Paragraph_1.1" = "This app showcases selected photos by the members of photo clubs. Ex-members of photo clubs can optionally also be included.";

/* Second paragraph in Waalre section of Readme page */
"Paragraph_1.2" = "It does this in a _uniform_ way across all these photographers and participating clubs. For the target audience, this uniformity avoids having to find the websites and discovering how to navigate each unique site.";

/* Third paragraph in Waalre section of Readme page */
"Paragraph_1.3" = "The app does not try to replace individual or club _websites_, or try to replace invididual or club social media presence: its only focus is to present all the images in an easily accesible way with minimal distraction. The app can display links to external sites for additional information.";

/* Fourth paragraph in Waalre section of Readme page */
"Paragraph_1.4" = "The app was originally named _Fotogroep (Photo Club) Waalre_ after an eponymous 20-person photo club in The Netherlands. The word 'Hub' in the new name stresses the app's current support for _multiple_ photo clubs, and the hope that the app can strengthen ties between clubs, and photographers by making their work easier to discover.";

/* Fifth paragraph in Waalre section of Readme page */
"Paragraph_1.5" = "Support for multiple photo clubs requires the ability to display a list of clubs, their members and a series of selected photos per member.";

/* Sixth paragraph in Waalre section of Readme page */
"Paragraph_1.6" = "Multi-club support also implies that individual clubs do their _data maintenance_: providing and maintaining the images and the associated lists. We believe that central support should be limited to maintaining the app only - leaving the maintenance of the data to the clubs that provide the images. The app's [GitHub site](https://GitHub.com/vdhamer/Photo-Club-Hub#readme) explains the interim approach for onboardng clubs and the plans how to enable the clubs to do this themselves with minimal software expertise.";

/* First paragraph in The App on Readme page */
"Paragraph_2.1" = "As mentioned, the goal of this app is to showcase curated work of members of photo clubs.";

/* Second paragraph in The App on Readme page */
"Paragraph_2.2" = "The main screen of the app shown a series of ***photo clubs***. Each photo club, in turn, contains a series of member ***portfolios***. The portfolios contain the actual images.";

/* Third paragraph in The App on Readme page */
"Paragraph_2.3" = "Each portfolio thus covers the subset of the photographer's work that is associated with that photo club. A photographer could have more than one portfolio in this app, if the photographer was (at some point in time) a member of multiple photo clubs.";

/* Fourth paragraph in The App on Readme page */
"Paragraph_2.4" = "Each portfolio is shown in chronological order, with the latest work shown first, and typically spans multiple years.";

/* Fifth paragraph in The App on Readme page */
"Paragraph_2.5" = "We try to show the portfolios with **minimal distraction**. Web sites are often less optimal for this because they need to show browser controls (e.g., an address bar or tabs) and serve multiple purposes (e.g., show club news or contact information).";

/* Sixth paragraph in the App on Readme page */
"Paragraph_2.6" = "For Photo Club Waalre, we chose to also include the work of former club members. By default, former members are not visible, but you can configure the app to show them.";

/* Seventh paragraph in the App on Readme page */
"Paragraph_2.7" = "Contact us (github@vdhamer.com) if you are interested in adding support for your photo club.";

/* First paragraph in The Features section of Readme page */
"Paragraph_3.1" = "__Web sites__\nWe regularly add features to the app. This requires some care, because we still want to maintain our focus on providing an optimal viewing experience. The app therefore explicitly does _not_ aim to replace existing websites, but instead provides links to these websites.";

/* Second paragraph in The Features section of Readme page */
"Paragraph_3.2" = "__Languages__\nThe app supports English and Dutch. iOS automatically selects the app's language based on your device’s language settings (_Settings > General > Language & Region > Preferred Language Order_). iOS also allows you to overrule this choice per app (_Settings > Photo Club Waalre > Language_).";

/* Third paragraph in The Features section of Readme page */
"Paragraph_3.3" = "__Deleting__\nOn the Portfolio page, you can swipe to ***Delete*** a member from the list. Don't worry - if the person is still a club member, that person will reappear the next time the app synchronizes its local data with online data. This swiping can be useful to remove members who are no longer on the online data members lists. In any case, swipe as much as you like (after all, it just might be therapeutical).";

/* Fourth paragraph in The Features section of Readme page */
"Paragraph_3.4" = "__Roadmap__\nBy clicking on the above button you can (anonymously) vote for improvements you would like in future versions of this app. You can only vote once for any particular improvement.";

/* First paragraph in Prelude section of Readme page */
"Paragraph_4.1" = "When the app opens, it shows a large image corresponding to the app’s icon. If you tap somewhere ***inside*** the image, it zooms out to show the full image representing how digital cameras see color.";

/* Second paragraph in Prelude section of Readme page */
"Paragraph_4.2" = "This involves a [Bayer color filter array](https://en.wikipedia.org/wiki/Bayer_filter) that filters the light per pixel. The filter array is shown here superimposed on a colorful photo.";

/* Third paragraph in Prelude section of Readme page */
"Paragraph_4.3" = "Tapping ***inside*** the image allows you to zoom in or out to your heart's content. Tapping ***outside*** the image area ends the animation. You can trigger the animation again by restarting the app. A single tap ***outside*** the image allows you to skip the animation entirely.";

/* First paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.1" = "The app runs on iPhone and iPad and requires iOS 17.0 or higher. Most iOS users tend to upgrade to the latest possible iOS version, which means that the app supports devices made in the last 5 or 6 years.";

/* Second paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.2" = "The app uses various Apple software technologies including Swift (a programming language), SwiftUI (a user interface framework), Core Data (local data storage), Metal (graphics acceleration), concurrency (for fetching data), and animations.";

/* Third paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.3" = "The benefit of an iOS focus is that it allows the developers to focus on functionality rather than cross-platform and cross-version interoperability issues.";

/* Fourth paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.4" = "The drawback, however, is the lack of Android support, because the Android universe has its own set of software technologies. Apps that choose to support multiple platforms require more development effort and often contain more technical compromises.";

/* Fifth paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.5" = "There is another perspective on not targeting Android anytime soon: it implies the app cannot contain any essentially functionality for which there is no alternative. So, again, the app cannot replace a club's website.";

/* Sixth paragraph SupportedPlatforms section of Readme page */
"Paragraph_5.6" = "To put the app's device support into perspective, consider the top-6 software environments. The top-6 platforms are, in [largest-first order](https://www.youtube.com/watch?v=7S9PBgS8HS8): web, Android, Windows, iOS, iPadOS. Only the very largest apps (like MS Word, Twitter, Minecraft, Chrome) manage to cover the full range. But many well-known apps choose to focus their resources: Photoshop (Windows, MacOS, iPadOS), WhatsApp (iOS, Android, web - kind of), Pokémon Go (Android, iOS, iPadOS - kind of). So, covering three of the top-six is a decent enough score for now.";

/* First paragraph Developers section of Readme page */
"Paragraph_6.1" = "You can find this app on GitHub. This allows other software developers to contribute. Getting more developers speeds things up somewhat, but also gives fresh ideas and promotes continuity.";

/* Second paragraph Developers section of Readme page */
"Paragraph_6.2" = "Welcome contributions include adding features, code improvements, ideas on architecture and interface definition, and possibly even a backend.";

/* Third paragraph Developers section of Readme page */
"Paragraph_6.3" = "Contributions that don't require coding are also very welcome: beta testing via TestFlight, feature requests, translations, SVG icons, sound effects, and maybe UI/UX design.";

/* Fourth paragraph Developers section of Readme page */
"Paragraph_6.4" = "A central design challenge for a next stage will be to provide a clean, standardized interface to retrieve data per photo club. The interface is needed to load the data, but also keeps the data within the app up to date. After all, membership data and portfolios change regularly. The current interface is essentially a plug-in design with an adaptor per photo club. This needs to be replaced by a standard data interface to avoid having to extend the source code whenever a new club comes aboard.";

/* Fifth paragraph Developers section of Readme page */
"Paragraph_6.5" = "The app currently uses a software module per club. That module loads membership and portfolio data from the club’s server and merges it into the in-app database. For Photo Club Waalre, the membership data is read from a HTML table on a password protected part of the club’s [website](https://www.FotogroepWaalre.nl). The portfolios use a somewhat more robust solution: they are read from XML files generated by a Lightroom Web plug-in called [JuiceBox-Pro](https://www.juicebox.net/tour/). Thus portfolios are created and managed as Lightroom *collections*. These collections are then uploaded to the webserver with a single _Upload_ click (thus triggering JuiceBox-Pro) where they can be downloaded by the app.";

/* Sixth paragraph Developers section of Readme page */
"Paragraph_6.6" = "Software developers or other volunteers who are willing to help can contact us via github@vdhamer.com. Regarding the required level of development experience: you should be good to go if you have created a complete SwiftUI app before. Alternatively, an experienced developer who is learning SwiftUI would also fit the bill. Recommended courses for learning SwiftUI are Hacking with Swift's practical [100 days of SwiftUI](https://www.hackingwithswift.com/100/swiftui/) or Stanford's fast paced and more academic online [CS193p course](https://cs193p.sites.stanford.edu).";

/* First paragraph Model section of Readme page */
"Paragraph_7.1" = "As an intro for developers, here is an informal tour of the ***model***. The model is a [schema](https://en.wikipedia.org/wiki/Database_schema) or information model in the database sense, or “Model“ in the sense of the [Model-View-ViewModel](https://www.hackingwithswift.com/books/ios-swiftui/introducing-mvvm-into-your-swiftui-project) design pattern. The app uses a Swift-style MVVM design, meaning model data is stored in structs rather than in classes.";

/* Second paragraph Model section of Readme page */
"Paragraph_7.2" = "The model: every **PhotoClub** has **Members** of various types (current, former, etc.), while some Members have a formal role like chairman within the PhotoClub. Some of **Photographer**'s data (like name and birthday) are unrelated to being a Member of a PhotoClub. **Portfolios** represent the body of work of a Photographer in the context of a PhotoClub. A Portfolio contains **Images**, but an Image could be in multiple Portfolios depending on where the Image was shared. Member and Portfolio can technically be considered synonyms from a modeling perspective: we create exactly one Portfolio for each PhotoClub that a Photographer joined. They are thus a single table in the database.";

/* Caption for image on Readme page */
"Partial model" = "Partial model";

/* Telephone number (usually invisible) */
"Phone:" = "Phone:";

/* Name of the app shown in PreludeView when app is started */
"Photo Club Hub" = "Photo Club Hub";

/* Title of page with clubs and maps */
"Photo Clubs" = "Photo Clubs";

/* Shown in gray at the bottom of the Photo Club page (1/3).*/
"PhotoClubs_Caption_1" = "① You can unlock/lock a map's scrolling and panning features using the Lock icon.";

/* Shown in gray at the bottom of the Photo Club page (2/3).*/
"PhotoClubs_Caption_2" = "② An individiual photo club can be deleted by first deleting (swipe left) all linked Portfolios on the Portfolio page, and then deleting (swipe left) the photo club itself on this page.";

/* Shown in gray at the bottom of the Photo Club page (3/3).*/
"PhotoClubs_Caption_3" = "③ To add extra photo clubs for testing purposes, drag down and release the top of the page.";

/* Title of page showing member portfolios */
"Portfolios" = "Portfolios";

/* Caption of an image on the Readme page */
"Poster for a photo club exposition\n" = "Poster for a photo club exposition\n";

/* Title of screen with toggles to adjust preferences */
"Preferences" = "Preferences";

/* Title of the opening animation screen */
"Prelude" = "Prelude";

/* Relationship status of member within a club. Used in concatenations. */
"prospective member" = "prospective member";

/* Title of Readme screen */
"Readme" = "Readme";

/* Field at top of Who's Who page that allows the user to filter the photographers based on either given- and family name.
Field at top of Members page that allows the user to filter the members based on either given- and family name. */
"Search names" = "Search names";

/* Administrative role of member within a club. Used as part of concatenations. */
"secretary" = "secretary";

/* Label of toggle in Preferences */
"Show aspiring members" = "Show aspiring members";

/* Label of toggle in Preferences */
"Show club officers" = "Show club officers";

/* Label of toggle in Preferences */
"Show current members" = "Show current members";

/* Label of toggle in Preferences */
"Show deceased members" = "Show deceased members";

/* Label of toggle in Preferences */
"Show external coaches" = "Show external coaches";

/* Label of toggle in Preferences */
"Show former members" = "Show former members";

/* Label of toggle in Preferences */
"Show honorary members" = "Show honorary members";

/* X member(s) shown (due to various forms of filtering) */
"shown" = "shown";

/* Section title on Readme page. */
"Supported Platforms" = "iOS, iPadOS";

/* Section title on Readme page */
"The app" = "The app";

/* Section title on Readme page */
"The concept" = "The concept";

/* Section title on Readme page */
"The Model" = "The Model";

/* Section title on Readme page */
"The Prelude" = "The Prelude";

/* Shown in gray at the bottom of the Photographers page. */
"This page lists all the photographers that this app knows about. A photographer has one or more clickable image thumbnails below the photographer's name. Clicking on any thumbnail leads to the images associated with one particular photo club. The thumbnails can be scrolled horizontally (if there are many of them on one line)." = "This page lists all the photographers that this app knows about. A photographer has one or more clickable image thumbnails below the photographer's name. Clicking on any thumbnail leads to the images associated with one particular photo club. The thumbnails can be scrolled horizontally (if there are many of them on one line).";

/* Hint to the user if the database returns zero Members with Search filter in use. */
"To see names here, please adapt the Search filter or enable additional categories on the Preferences page." = "To see names here, please adapt the Search filter or enable additional categories on the Preferences page.";

/* Hint to the user if the database returns zero Members with empty Search filter. */
"To see names here, please enable additional categories on the Preferences page." = "To see names here, please enable additional categories on the Preferences page.";

/* Administrative role of member within a club. Used as part of concatenations. */
"treasurer" = "treasurer";

/* Administrative role of member within a club. Used as part of concatenations. */
"vice-chairman" = "vice-chairman";

/* Hint to the user if all of the Preference toggles are disabled. */
"Warning: all member categories on the Preferences page are disabled. Please enable one or more options in Preferences." = "Warning: all member categories on the Preferences page are disabled. Please enable one or more options in Preferences.";

/* Title of page with list of photographers */
"Who's Who" = "Who's Who";

